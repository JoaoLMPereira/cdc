Community Distributed Cache

1) Settings
Tweak the configuration of the maps used to store the cache for CDA and Mondrian.

1.1) Enabled - Whether CDC cache is enabled. After changing this setting you should clear settings cache and reload plugins.

1.2) Max Size - How big will this cache be allowed to be.
  1.2.1) Policy - How the max size is assessed. Can be one of:
       1.2.1a) Cluster-wide map size (#) - Cap size by number of cache entries across all cache nodes.
       1.2.1b) Partition-wide map size (#) - Cap size by number of cache entries in each partition.
       1.2.1c) Map size per JVM (#) - Cap size by number of entries in each JVM.
       1.2.1d) Used heap percentage (%) - Cap by percentage of JVM heap memory used for this cache.
       1.2.1e) Used heap size (MB) - Cap amount of memory (in MB) of JVM heap memory that can be used by this cache.
  1.2.2) Value - The actual value for the maximum size. Meaning depends on selected policy.
WARNING: setting a heap size beyond maximum available memory for JVM may result in cache becoming unusable at startup.

1.3) Eviction - What to do when Max Size is reached.
  1.3.1) Policy - How the cache will be cleaned 
    1.3.1a) NONE - No eviction will be performed.
    1.3.1b) LRU - Least Recently Used cache entries will be evicted.
    1.3.1c) LFU - Least Frequently Used cache entries will be evicted.
  1.3.2) Value - The percentage of the number of entries to remove from cache using either LRU of LFU.

1.4) Time to Live (s) - Cap the maximum time entries in this map can exist (0 means no limit). This setting will not override TTL settings on Mondrian/CDA; it will just be an extra constraint. 